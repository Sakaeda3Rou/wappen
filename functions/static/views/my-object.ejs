<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="views/css/reset.css" type="text/css">
    <link rel="stylesheet" href="views/css/style.css" type="text/css">
    <script src="https://kit.fontawesome.com/7a89e754ee.js" crossorigin="anonymous"></script>
</head>
<body>
    <nav id="set-hamburger"></nav>
    <header class="header">
        <div class="header__title">My Object</div>
    </header>
    <main>
        <div class="add-btn js-btn" id="js-add-btn">
            <span class="add-btn__line add-btn__line--1"></span>
            <span class="add-btn__line add-btn__line--2"></span>
        </div>
        <div class="modal js-modal">
            <div class="modal__bg js-bg"></div>
            <div class="modal__main">
                <form id="upload_form" action="/object_upload" method="post" style="height: 100%; display: flex; flex-direction: column;">
                    <div class="drop">
                        <div id="preview" class="drop__preview"></div>
                        <div id="drop-zone" class="drop__zone">　<!-- ここに画像のドロップエリア -->
                            <p class="drop__title">画像をドラッグ＆ドロップもしくは</p>
                            <label class="drop__btn sub-btn"><input type="file" name="file" id="file-input" style="display: none;">画像を選択</label>
                        </div>
                    </div>
                    <!-- アップロードするオブジェクトのカテゴリ選択 -->
                    <ul id="category_list" class="modal__category">

                      <!-- カテゴリーリストを生成 -->

                    </ul>
                    <input type="submit" class="main-btn" value="マイオブジェクトへ登録" onclick="return create_upload_body()" style="margin: auto;">
                </form>
            </div>
        </div>
        <div class="inner">
            <div class="search">
                <div class="search__container">
                    <!-- 現在選択中のカテゴリをsearch-areaに並べる -->
                    <div id="text_area" class="search__area">:ここに検索のカテゴリ</div>
                    <div class="search__btn"><i class="fas fa-lg fa-angle-left search__icon"></i></div>
                </div>
                <div class="search__category">
                    <div class="category">
                        <h3 class="category__title">
                            カテゴリ検索
                        </h3>
                        <form action="#" style="display: flex; flex-direction: column;">
                            <div id="category_search_form" class="category__checks">

                              <!-- カテゴリーリストを生成 -->

                            </div>
                            <input id="search_btn" type="button" value="検索" class="category__search main-btn">
                        </form>
                    </div>
                </div>
            </div>
            <!-- 現在ユーザが登録しているオブジェクトを取得して一覧表示 -->
            <ul class="thumbnails">
                <li class="thumbnails__item"></li>
                <li class="thumbnails__item"></li>
                <li class="thumbnails__item"></li>
                <li class="thumbnails__item"></li>
                <li class="thumbnails__item"></li>
                <li class="thumbnails__item"></li>
                <li class="thumbnails__item"></li>
                <li class="thumbnails__item"></li>
                <li class="thumbnails__item"></li>
                <li class="thumbnails__item"></li>
                <li class="thumbnails__item"></li>
                <li class="thumbnails__item"></li>
                <li class="thumbnails__item"></li>
                <li class="thumbnails__item"></li>
            </ul>
        </div>
    </main>
    <footer id="footer"></footer>
    <script src="views/js/include.js"></script>
    <script src="views/js/modal.js"></script>
    <script src="views/js/myObjectUpload.js"></script>
    <script>

        function checkC(value){
          document.getElementById('text_area').innerHTML = "<p>value</p>";
        }

        // 検索コンテキストのアコーディオンを表示
        const search = document.querySelector('.search__btn');
        const category = document.querySelector('.search__category');
        let i = document.querySelector('i');

        search.addEventListener('click', () => {
            category.classList.toggle('search-open');
            i.classList.toggle('active__i');


            if(category.classList.contains('search-open')){
                category.style.height = category.scrollHeight + 'px';
            }else{
                category.style.height = 0;
            }
        });

        //ここからオブジェクト追加ボタンのモーション設定
        const add_btn = document.getElementById('js-add-btn');
        const line1 = document.querySelector('.add-btn__line--1');
        const line2 = document.querySelector('.add-btn__line--2');
        const modalBg = document.querySelector('.js-bg');

        add_btn.addEventListener('click', function() {
            line1.classList.toggle('active__line1');
            line2.classList.toggle('active__line2');
        });

        modalBg.addEventListener('click', function() {
            line1.classList.remove('active__line1');
            line2.classList.remove('active__line2');
        })
    </script>

    <script>
      // カテゴリーリストを作成
      let categoryList = []

      <% categoryList.forEach((category) => { %>
        categoryList.push({
          categoryId: "<%= category.categoryId %>",
          categoryName: "<%= category.categoryName %>",
          // カテゴリ検索の選択フラグ
          isSearchSelected: false,
          // オブジェクト登録時のカテゴリ選択フラグ
          isAddObjectSelected: false,
        });
      <% }); %>

      console.dir(categoryList);

      // カテゴリーをセット
      setCategory();

      // html documentにカテゴリーをセット
      function setCategory() {
        // カテゴリーをセットするdiv領域を取得
        const category_div_element = document.getElementById('category_list');

        const category_form_div_element = document.getElementById('category_search_form');

        for (let [index, category] of categoryList.entries()) {
          // オブジェクト追加の領域
          // liタグを作成
          const category_element = document.createElement('li');
          category_element.setAttribute('class', 'category-select');

          // labelタグを作成
          const label_element = document.createElement('label');

          // inputタグを作成
          const input_element = document.createElement('input');
          input_element.setAttribute('type', 'checkbox');
          input_element.setAttribute('value', `${category.categoryName}`);
          input_element.setAttribute('onclick', `addObjectCategorySwitch(${index})`);

          // category_div_elementに追加
          label_element.appendChild(input_element);
          label_element.insertAdjacentHTML('beforeend', `${category.categoryName}`);
          category_element.appendChild(label_element);
          category_div_element.appendChild(category_element);

          // オブジェクト検索の領域
          const category_check_div_element = document.createElement('div');
          category_check_div_element.setAttribute('class', 'category__check');

          // labelタグを作成
          const check_label_element = document.createElement('label');

          // inputタグを作成
          check_input_element = document.createElement('input');
          check_input_element.setAttribute('type', 'checkbox');
          check_input_element.setAttribute('value', `${category.categoryName}`);
          check_input_element.setAttribute('onclick', `searchCategorySwitch(${index})`);

          // category_form_div_elementに追加
          check_label_element.appendChild(check_input_element);
          check_label_element.insertAdjacentHTML('beforeend', `${category.categoryName}`);
          category_check_div_element.appendChild(check_label_element);
          category_form_div_element.appendChild(category_check_div_element);

        }

      }

      // カテゴリ検索のチェックボックスが変更された時
      function searchCategorySwitch(index) {

        categoryList[index].isSearchSelected = !(categoryList[index].isSearchSelected)

        console.log(`categoryList {index: ${index}, isSearchSelected: ${categoryList[index].isSearchSelected}}`);
      }

      // オブジェクト登録時のカテゴリチェックボックスが変更された時
      function addObjectCategorySwitch(index) {
        console.log(`addSwitch => ${index}`);

        categoryList[index].isAddObjectSelected = !(categoryList[index].isAddObjectSelected)

        console.log(`categoryList {index: ${index}, isAddObjectSelected: ${categoryList[index].isAddObjectSelected}}`);
      }
    </script>
    <script>

      // 検索ボタンにclickイベントを追加
      let search_btn = document.getElementById('search_btn');

      // 検索ボタンを押した時
      search_btn.addEventListener('click', () => {

        // 検索するカテゴリリストを作成
        let searchCategoryList = [];

        for (let category of categoryList) {
          if (category.isSearchSelected) {
            searchCategoryList.push(category.categoryId);
          }
        }

        // XMLHttpRequestを作成
        let xhr = new XMLHttpRequest();

        xhr.open('post', '/search_object');

        // オブジェクトリストと、検索カテゴリリストを渡す
        xhr.send(JSON.stringify({objectList: [{}], searchCategoryList: searchCategoryList}));

        // サーバーの応答を検知
        xhr.onreadystatechange = function () {
            if(xhr.readyState === 4 && xhr.status === 200){
                // オブジェクトリストを取得
                let restxt = xhr.responseText;
                console.log(`restxt => ${restxt}`);

                // TODO: オブジェクトを再表示

            }
        };

      }, false);

      // アップロードするbodyを作成
      function create_upload_body() {

        // アップロードする画像を取得
        let image = document.querySelector('#drop-zone').src;

        console.log(image);

        if (image == undefined) {
          window.alert('アップロードする画像を選択してね')
          return false;
        }

        // formを取得
        const form_element = document.getElementById('upload_form');

        // 選択カテゴリーリストを作成
        let uploadCategoryList = []
        for (let category of categoryList) {
          if (category.isAddObjectSelected) {
            uploadCategoryList.push(category.categoryId);
          }
        }

        // リクエストボディを作成
        const request_body = {image: image, uploadCategoryList: uploadCategoryList};

        // text要素を作成
        const text_element = document.createElement('input');
        text_element.hidden = true;
        text_element.setAttribute('name', '_request_body');
        text_element.setAttribute('value', JSON.stringify(request_body));
        form_element.appendChild(text_element);

        // formを送信
        form_element.submit();
      }

      // 検索結果を表示
      function searchResult() {
        // 検索結果を表示するdiv領域を取得
        const result_div_element = document.getElementById('#');
      }

    </script>
</body>
</html>
